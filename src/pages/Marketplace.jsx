
import React, { useState, useEffect, useCallback, useMemo } from 'react';
import { Proof } from '@/api/entities';
import { ProofTransfer } from '@/api/entities';
import { User } from '@/api/entities';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import {
  ShoppingCart,
  DollarSign,
  TrendingUp,
  Filter,
  Search,
  Coins,
  Award,
  ExternalLink,
  User as UserIcon,
  ShoppingBag,
  Loader2
} from 'lucide-react';
import { motion, AnimatePresence } from 'framer-motion';
import { format } from 'date-fns';
import { Link } from 'react-router-dom';
import { createPageUrl } from '@/utils';
import { Notification } from '@/api/entities';
import { base44 } from '@/api/base44Client';

const translations = {
  en: {
    title: "Intellectual Property Marketplace",
    subtitle: 'Discover, invest in, and trade unique intellectual properties.',
    searchPlaceholder: 'Search for proofs by title...',
    sortBy: 'Sort by:',
    newest: 'Newest',
    oldest: 'Oldest',
    priceHighLow: 'Price: High to Low',
    priceLowHigh: 'Price: Low to High',
    categoryFilter: 'Category:',
    allCategories: 'All Categories',
    buyNow: 'Buy Now',
    viewDetails: 'View Details',
    noResultsTitle: 'No proofs found for sale',
    noResultsDesc: 'Check back later or adjust your search filters.',
    proofsForSale: 'Proofs for Sale',
    available: 'Available',
    minPrice: 'Min Price (Cerebrum)',
    maxPrice: 'Max Price (Cerebrum)',
    avgPrice: 'Avg Price (Cerebrum)',
    ideas: 'Ideas',
    inventions: 'Inventions',
    brands: 'Brands',
    designs: 'Designs',
    other: 'Other',
    allPrices: 'All Prices',
    under10: 'Under 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: 'Over 100 Cerebrum',
    popular: 'Most Popular',
    owner: 'Owner:',
    views: 'Views:',
    connectToBuy: 'Connect Wallet to Buy',
    ownProof: 'Your Own Proof',
    purchaseConfirm: 'Are you sure you want to purchase "{title}" for {price} Cerebrum tokens?',
    purchaseSuccess: 'ЁЯОЙ Purchase successful! The proof ownership has been transferred to you.',
    purchaseFailed: 'Purchase failed. Please try again.',
    purchaseOwnError: 'You cannot purchase your own proof.',
    insufficientBalance: 'Insufficient Cerebrum balance. You need {needed} Cerebrum but have {has} Cerebrum.',
    loading: 'Loading...',
    price: 'Price'
  },
  fa: {
    title: '╪и╪з╪▓╪з╪▒ ┘Ж┘И╪в┘И╪▒█М',
    subtitle: '╪з┘Е┘Д╪з┌й ┘Е╪╣┘Ж┘И█М ┘Е┘Ж╪н╪╡╪▒ ╪и┘З ┘Б╪▒╪п ╪▒╪з ┌й╪┤┘Б╪М ╪│╪▒┘Е╪з█М┘ЗтАМ┌п╪░╪з╪▒█М ┘И ┘Е╪╣╪з┘Е┘Д┘З ┌й┘Ж█М╪п.',
    searchPlaceholder: '╪м╪│╪к╪м┘И█М ┌п┘И╪з┘З█МтАМ┘З╪з ╪и╪▒ ╪з╪│╪з╪│ ╪╣┘Ж┘И╪з┘Ж...',
    sortBy: '┘Е╪▒╪к╪итАМ╪│╪з╪▓█М ╪и╪▒ ╪з╪│╪з╪│:',
    newest: '╪м╪п█М╪п╪к╪▒█М┘Ж',
    oldest: '┘В╪п█М┘Е█МтАМ╪к╪▒█М┘Ж',
    priceHighLow: '┘В█М┘Е╪к: ╪▓█М╪з╪п ╪и┘З ┌й┘Е',
    priceLowHigh: '┘В█М┘Е╪к: ┌й┘Е ╪и┘З ╪▓█М╪з╪п',
    categoryFilter: '╪п╪│╪к┘З ╪и┘Ж╪п█М:',
    allCategories: '┘З┘Е┘З ╪п╪│╪к┘З ╪и┘Ж╪п█МтАМ┘З╪з',
    buyNow: '╪о╪▒█М╪п ┘Б┘И╪▒█М',
    viewDetails: '┘Е╪┤╪з┘З╪п┘З ╪м╪▓╪ж█М╪з╪к',
    noResultsTitle: '┘З█М┌Ж ┌п┘И╪з┘З█М ╪и╪▒╪з█М ┘Б╪▒┘И╪┤ █М╪з┘Б╪к ┘Ж╪┤╪п',
    noResultsDesc: '╪и╪╣╪п╪з┘Л ╪п┘И╪и╪з╪▒┘З ╪и╪▒╪▒╪│█М ┌й┘Ж█М╪п █М╪з ┘Б█М┘Д╪к╪▒┘З╪з█М ╪м╪│╪к╪м┘И█М ╪о┘И╪п ╪▒╪з ╪к┘Ж╪╕█М┘Е ┌й┘Ж█М╪п.',
    proofsForSale: '┌п┘И╪з┘З█МтАМ┘З╪з█М ╪и╪▒╪з█М ┘Б╪▒┘И╪┤',
    available: '┘Е┘И╪м┘И╪п',
    minPrice: '┌й┘Е╪к╪▒█М┘Ж ┘В█М┘Е╪к (Cerebrum)',
    maxPrice: '╪и█М╪┤╪к╪▒█М┘Ж ┘В█М┘Е╪к (Cerebrum)',
    avgPrice: '┘Е█М╪з┘Ж┌п█М┘Ж ┘В█М┘Е╪к (Cerebrum)',
    ideas: '╪з█М╪п┘ЗтАМ┘З╪з',
    inventions: '╪з╪о╪к╪▒╪з╪╣╪з╪к',
    brands: '╪и╪▒┘Ж╪п┘З╪з',
    designs: '╪╖╪▒╪з╪н█МтАМ┘З╪з',
    other: '╪│╪з█М╪▒',
    allPrices: '┘З┘Е┘З ┘В█М┘Е╪ктАМ┘З╪з',
    under10: '╪▓█М╪▒ █▒█░ Cerebrum',
    price10to50: '█▒█░-█╡█░ Cerebrum',
    price50to100: '█╡█░-█▒█░█░ Cerebrum',
    over100: '╪и█М╪┤ ╪з╪▓ █▒█░█░ Cerebrum',
    popular: '┘Е╪н╪и┘И╪итАМ╪к╪▒█М┘Ж',
    owner: '┘Е╪з┘Д┌й:',
    views: '╪и╪з╪▓╪п█М╪п:',
    connectToBuy: '╪и╪▒╪з█М ╪о╪▒█М╪п╪М ┌й█М┘Б ┘╛┘И┘Д ╪▒╪з ┘Е╪к╪╡┘Д ┌й┘Ж█М╪п',
    ownProof: '┌п┘И╪з┘З█М ┘Е╪к╪╣┘Д┘В ╪и┘З ╪┤┘Е╪з╪│╪к',
    purchaseConfirm: '╪в█М╪з ┘Е╪╖┘Е╪ж┘Ж ┘З╪│╪к█М╪п ┌й┘З ┘Е█МтАМ╪о┘И╪з┘З█М╪п "{title}" ╪▒╪з ╪и┘З ┘В█М┘Е╪к {price} ╪к┘И┌й┘Ж Cerebrum ╪о╪▒█М╪п╪з╪▒█М ┌й┘Ж█М╪п╪Я',
    purchaseSuccess: 'ЁЯОЙ ╪о╪▒█М╪п ┘Е┘И┘Б┘В ╪и┘И╪п! ┘Е╪з┘Д┌й█М╪к ┌п┘И╪з┘З█М ╪и┘З ╪┤┘Е╪з ┘Е┘Ж╪к┘В┘Д ╪┤╪п.',
    purchaseFailed: '╪о╪▒█М╪п ┘Ж╪з┘Е┘И┘Б┘В ╪и┘И╪п. ┘Д╪╖┘Б╪з┘Л ╪п┘И╪и╪з╪▒┘З ╪к┘Д╪з╪┤ ┌й┘Ж█М╪п.',
    purchaseOwnError: '╪┤┘Е╪з ┘Ж┘Е█МтАМ╪к┘И╪з┘Ж█М╪п ┌п┘И╪з┘З█М ╪о┘И╪п ╪▒╪з ╪о╪▒█М╪п╪з╪▒█М ┌й┘Ж█М╪п.',
    insufficientBalance: '┘Е┘И╪м┘И╪п█М Cerebrum ┌й╪з┘Б█М ┘Ж█М╪│╪к. ╪┤┘Е╪з ╪и┘З {needed} ╪к┘И┌й┘Ж Cerebrum ┘Ж█М╪з╪▓ ╪п╪з╪▒█М╪п ╪з┘Е╪з {has} ╪к┘И┌й┘Ж ╪п╪з╪▒█М╪п.',
    loading: '╪п╪▒ ╪н╪з┘Д ╪и╪з╪▒┌п█М╪▒█М...',
    price: '┘В█М┘Е╪к'
  },
  zh: {
    title: 'хИЫцЦ░х╕ВхЬ║',
    subtitle: 'хПСчО░уАБцКХш╡ДхТМф║дцШУчЛмчЙ╣чЪДчЯешпЖф║зцЭГуАВ',
    searchPlaceholder: 'цМЙцаЗщвШцРЬч┤вшпБцШО...',
    sortBy: 'цОТх║ПцЦ╣х╝Пя╝Ъ',
    newest: 'цЬАцЦ░',
    oldest: 'цЬАцЧз',
    priceHighLow: 'ф╗╖ца╝я╝Ъф╗ОщлШхИ░ф╜О',
    priceLowHigh: 'ф╗╖ца╝я╝Ъф╗Оф╜ОхИ░щлШ',
    categoryFilter: 'ч▒╗хИля╝Ъ',
    allCategories: 'цЙАцЬЙч▒╗хИл',
    buyNow: 'члЛхН│ш┤нф╣░',
    viewDetails: 'цЯечЬЛшпжцГЕ',
    noResultsTitle: 'цЬкцЙ╛хИ░х╛ЕхФошпБцШО',
    noResultsDesc: 'шп╖чиНхРОхЖНшпХцИЦш░ГцХ┤цВичЪДцРЬч┤вш┐Зц╗дхЩиуАВ',
    proofsForSale: 'х╛ЕхФошпБцШО',
    available: 'хПпчФи',
    minPrice: 'цЬАф╜Оф╗╖ (Cerebrum)',
    maxPrice: 'цЬАщлШф╗╖ (Cerebrum)',
    avgPrice: 'х╣│хЭЗф╗╖ (Cerebrum)',
    ideas: 'хИЫцДП',
    inventions: 'хПСцШО',
    brands: 'хУБчЙМ',
    designs: 'шо╛шоб',
    other: 'хЕ╢ф╗Ц',
    allPrices: 'цЙАцЬЙф╗╖ца╝',
    under10: 'ф╜Оф║О10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: 'ш╢Еш┐З100 Cerebrum',
    popular: 'цЬАхПЧцмвш┐О',
    owner: 'цЙАцЬЙшАЕя╝Ъ',
    views: 'ц╡ПшзИцмбцХ░я╝Ъ',
    connectToBuy: 'ш┐ЮцОещТ▒хМЕф╗еш┤нф╣░',
    ownProof: 'цВишЗкх╖▒чЪДшпБцШО',
    purchaseConfirm: 'цВичбохоЪшжБф╗е{price} Cerebrumф╗гх╕Бш┤нф╣░тАЬ{title}тАЭхРЧя╝Я',
    purchaseSuccess: 'ЁЯОЙ ш┤нф╣░цИРхКЯя╝БшпБцШОцЙАцЬЙцЭГх╖▓ш╜мчз╗ч╗ЩцВиуАВ',
    purchaseFailed: 'ш┤нф╣░хд▒ш┤еуАВшп╖щЗНшпХуАВ',
    purchaseOwnError: 'цВиф╕НшГ╜ш┤нф╣░шЗкх╖▒чЪДшпБцШОуАВ',
    insufficientBalance: 'Cerebrumф╜ЩщвЭф╕Нш╢│уАВцВищЬАшжБ{needed} Cerebrumя╝Мф╜ЖхПкцЬЙ{has} CerebrumуАВ',
    loading: 'хКаш╜╜ф╕н...',
    price: 'ф╗╖ца╝'
  },
  hi: {
    title: 'рдирд╡рд╛рдЪрд╛рд░ рдмрд╛рдЬрд╝рд╛рд░',
    subtitle: 'рдЕрджреНрд╡рд┐рддреАрдп рдмреМрджреНрдзрд┐рдХ рд╕рдВрдкрджрд╛рдУрдВ рдХреА рдЦреЛрдЬ рдХрд░реЗрдВ, рдЙрдирдореЗрдВ рдирд┐рд╡реЗрд╢ рдХрд░реЗрдВ рдФрд░ рдЙрдирдХрд╛ рд╡реНрдпрд╛рдкрд╛рд░ рдХрд░реЗрдВред',
    searchPlaceholder: 'рд╢реАрд░реНрд╖рдХ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдкреНрд░рдорд╛рдг рдЦреЛрдЬреЗрдВ...',
    sortBy: 'рдХреНрд░рдордмрджреНрдз рдХрд░реЗрдВ:',
    newest: 'рдирд╡реАрдирддрдо',
    oldest: 'рд╕рдмрд╕реЗ рдкреБрд░рд╛рдирд╛',
    priceHighLow: 'рдХреАрдордд: рдЙрдЪреНрдЪ рд╕реЗ рдирд┐рдореНрди',
    priceLowHigh: 'рдХреАрдордд: рдирд┐рдореНрди рд╕реЗ рдЙрдЪреНрдЪ',
    categoryFilter: 'рд╢реНрд░реЗрдгреА:',
    allCategories: 'рд╕рднреА рд╢реНрд░реЗрдгрд┐рдпрд╛рдБ',
    buyNow: 'рдЕрднреА рдЦрд░реАрджреЗрдВ',
    viewDetails: 'рд╡рд┐рд╡рд░рдг рджреЗрдЦреЗрдВ',
    noResultsTitle: 'рдмрд┐рдХреНрд░реА рдХреЗ рд▓рд┐рдП рдХреЛрдИ рдкреНрд░рдорд╛рдг рдирд╣реАрдВ рдорд┐рд▓рд╛',
    noResultsDesc: 'рдмрд╛рдж рдореЗрдВ рдлрд┐рд░ рд╕реЗ рджреЗрдЦреЗрдВ рдпрд╛ рдЕрдкрдиреЗ рдЦреЛрдЬ рдлрд╝рд┐рд▓реНрдЯрд░ рд╕рдорд╛рдпреЛрдЬрд┐рдд рдХрд░реЗрдВред',
    proofsForSale: 'рдмрд┐рдХреНрд░реА рдХреЗ рд▓рд┐рдП рдкреНрд░рдорд╛рдг',
    available: 'рдЙрдкрд▓рдмреНрдз',
    minPrice: 'рдиреНрдпреВрдирддрдо рдХреАрдордд (Cerebrum)',
    maxPrice: 'рдЕрдзрд┐рдХрддрдо рдХреАрдордд (Cerebrum)',
    avgPrice: 'рдФрд╕рдд рдХреАрдордд (Cerebrum)',
    ideas: 'рд╡рд┐рдЪрд╛рд░',
    inventions: 'рдЖрд╡рд┐рд╖реНрдХрд╛рд░',
    brands: 'рдмреНрд░рд╛рдВрдб',
    designs: 'рдбрд┐рдЬрд╝рд╛рдЗрди',
    other: 'рдЕрдиреНрдп',
    allPrices: 'рд╕рднреА рдХреАрдорддреЗрдВ',
    under10: '10 рд╕реЗрд░реЗрдмреНрд░рдо рд╕реЗ рдХрдо',
    price10to50: '10-50 рд╕реЗрд░реЗрдмреНрд░рдо',
    price50to100: '50-100 рд╕реЗрд░реЗрдмреНрд░рдо',
    over100: '100 рд╕реЗрд░реЗрдмреНрд░рдо рд╕реЗ рдЕрдзрд┐рдХ',
    popular: 'рд╕рдмрд╕реЗ рд▓реЛрдХрдкреНрд░рд┐рдп',
    owner: 'рдорд╛рд▓рд┐рдХ:',
    views: 'рджреГрд╢реНрдп:',
    connectToBuy: 'рдЦрд░реАрджрдиреЗ рдХреЗ рд▓рд┐рдП рд╡реЙрд▓реЗрдЯ рдХрдиреЗрдХреНрдЯ рдХрд░реЗрдВ',
    ownProof: 'рдЖрдкрдХрд╛ рдЕрдкрдирд╛ рдкреНрд░рдорд╛рдг',
    purchaseConfirm: 'рдХреНрдпрд╛ рдЖрдк рд╡рд╛рдХрдИ {price} рд╕реЗрд░реЗрдмреНрд░рдо рдЯреЛрдХрди рдХреЗ рд▓рд┐рдП "{title}" рдЦрд░реАрджрдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?',
    purchaseSuccess: 'ЁЯОЙ рдЦрд░реАрджрд╛рд░реА рд╕рдлрд▓! рдкреНрд░рдорд╛рдг рдХрд╛ рд╕реНрд╡рд╛рдорд┐рддреНрд╡ рдЖрдкрдХреЛ рд╣рд╕реНрддрд╛рдВрддрд░рд┐рдд рдХрд░ рджрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред',
    purchaseFailed: 'рдЦрд░реАрджрд╛рд░реА рд╡рд┐рдлрд▓ред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред',
    purchaseOwnError: 'рдЖрдк рдЕрдкрдирд╛ рдЦреБрдж рдХрд╛ рдкреНрд░рдорд╛рдг рдирд╣реАрдВ рдЦрд░реАрдж рд╕рдХрддреЗ рд╣реИрдВред',
    insufficientBalance: 'рдо┘И╪м┘И╪п█М Cerebrum ┌й╪з┘Б█М ┘Ж█Б█М┌║ █Б█Т█Ф ╪в┘╛ ┌й┘И {needed} рд╕реЗрд░реЗрдмреНрд░рдо рдЪрд╛рд╣рд┐рдП рд▓реЗрдХрд┐рди рдЕрдк рдХреЗ рдкрд╛рд╕ {has} рд╕реЗрд░реЗрдмрд░рдо рд╣реИред',
    loading: 'рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ...',
    price: 'рдХреАрдордд'
  },
  ur: {
    title: '╪з┘Ж┘И┘И█М╪┤┘Ж ┘Е╪з╪▒┌й█М┘╣ ┘╛┘Д█М╪│',
    subtitle: '┘Е┘Ж┘Б╪▒╪п ╪п╪з┘Ж╪┤┘И╪▒╪з┘Ж█Б ╪з┘Е┘Д╪з┌й ┌й┘И ╪п╪▒█М╪з┘Б╪к ┌й╪▒█М┌║╪М ╪з┘Ж ┘Е█М┌║ ╪│╪▒┘Е╪з█М█Б ┌й╪з╪▒█М ┌й╪▒█М┌║ ╪з┘И╪▒ ╪к╪м╪з╪▒╪к ┌й╪▒█М┌║█Ф',
    searchPlaceholder: '╪╣┘Ж┘И╪з┘Ж ┌й█Т ┘Д╪н╪з╪╕ ╪│█Т ╪л╪и┘И╪к ╪к┘Д╪з╪┤ ┌й╪▒█М┌║...',
    sortBy: '╪к╪▒╪к█М╪и ╪п█М┌║:',
    newest: '╪м╪п█М╪п ╪к╪▒█М┘Ж',
    oldest: '┘В╪п█М┘Е ╪к╪▒█М┘Ж',
    priceHighLow: '┘В█М┘Е╪к: ╪▓█М╪з╪п█Б ╪│█Т ┌й┘Е',
    priceLowHigh: '┘В█М┘Е╪к: ┌й┘Е ╪│█Т ╪▓█М╪з╪п█Б',
    categoryFilter: '╪▓┘Е╪▒█Б:',
    allCategories: '╪к┘Е╪з┘Е ╪▓┘Е╪▒█Т',
    buyNow: '╪з╪и┌╛█М ╪о╪▒█М╪п█М┌║',
    viewDetails: '╪к┘Б╪╡█М┘Д╪з╪к ╪п█М┌й┌╛█М┌║',
    noResultsTitle: '┘Б╪▒┘И╪о╪к ┌й█Т ┘Д█М█Т ┌й┘И╪ж█М ╪л╪и┘И╪к ┘Ж█Б█М┌║ ┘Е┘Д╪з',
    noResultsDesc: '╪и╪╣╪п ┘Е█М┌║ ╪п┘И╪и╪з╪▒█Б ┌Ж█М┌й ┌й╪▒█М┌║ █М╪з ╪з┘╛┘Ж█Т ╪│╪▒┌Ж ┘Б┘Д┘╣╪▒╪▓ ┌й┘И ╪з█М┌И╪м╪│┘╣ ┌й╪▒█М┌║█Ф',
    proofsForSale: '┘Б╪▒┘И╪о╪к ┌й█Т ┘Д█М█Т ╪л╪и┘И╪к',
    available: '╪п╪│╪к█М╪з╪и',
    minPrice: '┌й┘Е ╪│█Т ┌й┘Е ┘В█М┘Е╪к (Cerebrum)',
    maxPrice: '╪▓█М╪з╪п█Б ╪│█Т ╪▓█М╪з╪п█Б ┘В█М┘Е╪к (Cerebrum)',
    avgPrice: '╪з┘И╪│╪╖ ┘В█М┘Е╪к (Cerebrum)',
    ideas: '╪о█М╪з┘Д╪з╪к',
    inventions: '╪з█М╪м╪з╪п╪з╪к',
    brands: '╪и╪▒╪з┘Ж┌И╪▓',
    designs: '┌И█М╪▓╪з╪ж┘Ж',
    other: '╪п█М┌п╪▒',
    allPrices: '╪к┘Е╪з┘Е ┘В█М┘Е╪к█М┌║',
    under10: '10 ╪│█М╪▒█М╪иреНрд░рдо ╪│█Т ┌й┘Е',
    price10to50: '10-50 ╪│█М╪▒█М╪иреНрд░рдо',
    price50to100: '50-100 ╪│█М╪▒█М╪иреНрд░рдо',
    over100: '100 ╪│█М╪▒█М╪иреНрд░рдо ╪│█Т ╪▓█М╪з╪п█Б',
    popular: '╪│╪и ╪│█Т ╪▓█М╪з╪п█Б ┘Е┘В╪и┘И┘Д',
    owner: '┘Е╪з┘Д┌й:',
    views: '┘Е┘Ж╪з╪╕╪▒:',
    connectToBuy: '╪о╪▒█М╪п┘Ж█Т ┌й█Т ┘Д█М█Т ┘И╪з┘Д█М┘╣ ┘Е╪▒╪и┘И╪╖ ┌й╪▒█М┌║',
    ownProof: '╪в┘╛ ┌й╪з ╪з┘╛┘Ж╪з ╪л╪и┘И╪к',
    purchaseConfirm: '┌й█М╪з ╪в┘╛ ┘И╪з┘В╪╣█М {price} ╪│█М╪▒█М╪иреНрд░рдо ┘╣┘И┌й┘Ж╪▓ ┘Е█М┌║ "{title}" ╪о╪▒█М╪п┘Ж╪з ┌Ж╪з█Б╪к█Т █Б█М┌║╪Я',
    purchaseSuccess: 'ЁЯОЙ ╪о╪▒█М╪п╪з╪▒█М ┌й╪з┘Е█М╪з╪и! ╪л╪и┘И╪к ┌й█М ┘Е┘Д┌й█М╪к ╪в┘╛ ┌й┘И ┘Е┘Ж╪к┘В┘Д ┌й╪▒ ╪п█М ┌п╪ж█М █Б█Т█Ф',
    purchaseFailed: '╪о╪▒█М╪п╪з╪▒█М ┘Ж╪з┌й╪з┘Е █Б┘И┌п╪ж█М█Ф ╪и╪▒╪з█Б ┌й╪▒┘Е ╪п┘И╪и╪з╪▒█Б ┌й┘И╪┤╪┤ ┌й╪▒█М┌║█Ф',
    purchaseOwnError: '╪в┘╛ ╪з┘╛┘Ж╪з ╪л╪и┘И╪к ┘Ж█Б█М┌║ ╪о╪▒█М╪п ╪│┌й╪к█Т █Б█М┌║█Ф',
    insufficientBalance: '┘Ж╪з┌й╪з┘Б█М ╪│█М╪▒█М╪иреНрд░рдо ╪и█М┘Д┘Ж╪│█Ф ╪в┘╛ ┌й┘И {needed} ╪│█М╪▒█М╪иреНрд░рдо ╪п╪▒┌й╪з╪▒ █Б█М┌║ ┘Д█М┌й┘Ж ╪в┘╛ ┌й█Т ┘╛╪з╪│ {has} ╪│█М╪▒█М╪иреНрд░рдо █Б█М┌║█Ф',
    loading: '┘Д┘И┌И █Б┘И ╪▒█Б╪з █Б█Т...',
    price: '┘В█М┘Е╪к'
  },
  de: {
    title: 'Marktplatz f├╝r Geistiges Eigentum',
    subtitle: 'Entdecken, erwerben und handeln Sie AI-validierte geistige Eigentumsrechte.',
    searchPlaceholder: 'Suche nach Titel, Kategorie oder Hash...',
    sortBy: 'Sortieren nach:',
    newest: 'Neueste',
    oldest: '├Дlteste',
    priceHighLow: 'Preis: Hoch nach Niedrig',
    priceLowHigh: 'Preis: Niedrig nach Hoch',
    categoryFilter: 'Kategorie:',
    allCategories: 'Alle Kategorien',
    buyNow: 'Jetzt kaufen',
    viewDetails: 'Details anzeigen',
    noResultsTitle: 'Keine Nachweise gefunden',
    noResultsDesc: 'Versuchen Sie, Ihre Such- oder Filterkriterien anzupassen, um Ergebnisse zu finden.',
    proofsForSale: 'Nachweise zum Verkauf',
    available: 'Verf├╝gbar',
    minPrice: 'Mindestpreis (Cerebrum)',
    maxPrice: 'H├╢chstpreis (Cerebrum)',
    avgPrice: 'Durchschnittspreis (Cerebrum)',
    ideas: 'Ideen',
    inventions: 'Erfindungen',
    brands: 'Marken',
    designs: 'Designs',
    other: 'Andere',
    allPrices: 'Alle Preise',
    under10: 'Unter 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: '├Ьber 100 Cerebrum',
    popular: 'Beliebteste',
    owner: 'Eigent├╝mer:',
    views: 'Aufrufe:',
    connectToBuy: 'Wallet verbinden zum Kaufen',
    ownProof: 'Ihr eigener Nachweis',
    purchaseConfirm: 'Sind Sie sicher, dass Sie "{title}" f├╝r {price} Cerebrum-Token kaufen m├╢chten?',
    purchaseSuccess: 'ЁЯОЙ Kauf erfolgreich! Das Eigentum am Nachweis wurde auf Sie ├╝bertragen.',
    purchaseFailed: 'Kauf fehlgeschlagen. Bitte versuchen Sie es erneut.',
    purchaseOwnError: 'Sie k├╢nnen Ihren eigenen Nachweis nicht kaufen.',
    insufficientBalance: 'Unzureichendes Cerebrum-Guthaben. Sie ben├╢tigen {needed} Cerebrum, haben aber {has} Cerebrum.',
    loading: 'Lade Marktplatz...',
    invention: 'Erfindung',
    brand: 'Marke',
    idea: 'Idee',
    design: 'Design',
    price: 'Preis'
  },
  fr: {
    title: 'March├й de l\'innovation',
    subtitle: 'D├йcouvrez, investissez et ├йchangez des propri├йt├йs intellectuelles uniques.',
    searchPlaceholder: 'Rechercher des preuves par titre...',
    sortBy: 'Trier par :',
    newest: 'Plus r├йcent',
    oldest: 'Plus ancien',
    priceHighLow: 'Prix : d├йcroissant',
    priceLowHigh: 'Prix : croissant',
    categoryFilter: 'Cat├йgorie :',
    allCategories: 'Toutes les cat├йgories',
    buyNow: 'Acheter maintenant',
    viewDetails: 'Voir les d├йtails',
    noResultsTitle: 'Aucune preuve ├а vendre trouv├йe',
    noResultsDesc: 'Revenez plus tard ou ajustez vos filtres de recherche.',
    proofsForSale: 'Preuves ├а vendre',
    available: 'Disponible',
    minPrice: 'Prix min (Cerebrum)',
    maxPrice: 'Prix max (Cerebrum)',
    avgPrice: 'Prix moyen (Cerebrum)',
    ideas: 'Id├йes',
    inventions: 'Inventions',
    brands: 'Marques',
    designs: 'Dessins',
    other: 'Autre',
    allPrices: 'Toutes les prix',
    under10: 'Moins de 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: 'Plus de 100 Cerebrum',
    popular: 'Les plus populaires',
    owner: 'Propri├йtaire :',
    views: 'Vues :',
    connectToBuy: 'Connecter le portefeuille pour acheter',
    ownProof: 'Votre propre preuve',
    purchaseConfirm: '├Кtes-vous s├╗r de vouloir acheter "{title}" pour {price} jetons Cerebrum ?',
    purchaseSuccess: 'ЁЯОЙ Achat r├йussi ! La propri├йt├й de la preuve vous a ├йt├й transf├йr├йe.',
    purchaseFailed: '├Йchec de l\'achat. Veuillez r├йessayer.',
    purchaseOwnError: 'Vous ne pouvez pas acheter votre propre preuve.',
    insufficientBalance: 'Solde Cerebrum insuffisant. Vous avez besoin de {needed} Cerebrum mais vous avez {has} Cerebrum.',
    loading: 'Chargement...',
    price: 'Prix'
  },
  es: {
    title: 'Mercado de la Innovaci├│n',
    subtitle: 'Descubra, invierta y comercie con propiedades intelectuales ├║nicas.',
    searchPlaceholder: 'Buscar pruebas por t├нtulo...',
    sortBy: 'Ordenar por:',
    newest: 'M├бs reciente',
    oldest: 'M├бs antiguo',
    priceHighLow: 'Precio: de mayor a menor',
    priceLowHigh: 'Precio: de menor a mayor',
    categoryFilter: 'Categor├нa:',
    allCategories: 'Todas las categor├нas',
    buyNow: 'Comprar ahora',
    viewDetails: 'Ver detalles',
    noResultsTitle: 'No se encontraron pruebas en venta',
    noResultsDesc: 'Vuelva m├бs tarde o ajuste sus filtros de b├║squeda.',
    proofsForSale: 'Pruebas en venta',
    available: 'Disponible',
    minPrice: 'Precio m├нn. (Cerebrum)',
    maxPrice: 'Precio m├бx. (Cerebrum)',
    avgPrice: 'Precio prom. (Cerebrum)',
    ideas: 'Ideas',
    inventions: 'Invenciones',
    brands: 'Marcas',
    designs: 'Dise├▒os',
    other: 'Otro',
    allPrices: 'Todos los precios',
    under10: 'Menos de 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: 'M├бs de 100 Cerebrum',
    popular: 'M├бs popular',
    owner: 'Propietario:',
    views: 'Vistas:',
    connectToBuy: 'Conectar billetera para comprar',
    ownProof: 'Tu propia prueba',
    purchaseConfirm: '┬┐Est├бs seguro de que quieres comprar "{title}" por {price} tokens de Cerebrum?',
    purchaseSuccess: 'ЁЯОЙ ┬бCompra exitosa! La propiedad de la prueba ha sido transferida a ti.',
    purchaseFailed: 'La compra fall├│. Por favor, int├йntalo de nuevo.',
    purchaseOwnError: 'No puedes comprar tu propia prueba.',
    insufficientBalance: 'Saldo de Cerebrum insuficiente. Necesitas {needed} Cerebrum pero tienes {has} Cerebrum.',
    loading: 'Cargando...',
    price: 'Precio'
  },
  ar: {
    title: '╪│┘И┘В ╪з┘Д╪з╪и╪к┘Г╪з╪▒',
    subtitle: '╪з┘Г╪к╪┤┘Б ┘И╪з╪│╪к╪л┘Е╪▒ ┘И╪к╪п╪з┘И┘Д ┘Б┘К ╪з┘Д┘Е┘Д┘Г┘К╪з╪к ╪з┘Д┘Б┘Г╪▒┘К╪й ╪з┘Д┘Б╪▒┘К╪п╪й.',
    searchPlaceholder: '╪з╪и╪н╪л ╪╣┘Ж ╪з┘Д╪е╪л╪и╪з╪к╪з╪к ╪н╪│╪и ╪з┘Д╪╣┘Ж┘И╪з┘Ж...',
    sortBy: '┘Б╪▒╪▓ ╪н╪│╪и:',
    newest: '╪з┘Д╪г╪н╪п╪л',
    oldest: '╪з┘Д╪г┘В╪п┘Е',
    priceHighLow: '╪з┘Д╪│╪╣╪▒: ┘Е┘Ж ╪з┘Д╪г╪╣┘Д┘Й ╪е┘Д┘Й ╪з┘Д╪г┘В┘Д',
    priceLowHigh: '╪з┘Д╪│╪╣╪▒: ┘Е┘Ж ╪з┘Д╪г┘В┘Д ╪е┘Д┘Й ╪з┘Д╪г╪╣┘Д┘Й',
    categoryFilter: '╪з┘Д┘Б╪ж╪й:',
    allCategories: '┘Г┘Д ╪з┘Д┘Б╪ж╪з╪к',
    buyNow: '╪┤╪▒╪з╪б ╪з┘Д╪в┘Ж',
    viewDetails: '╪╣╪▒╪╢ ╪з┘Д╪к┘Б╪з╪╡┘К┘Д',
    noResultsTitle: '┘Д┘Е ┘К╪к┘Е ╪з┘Д╪╣╪л┘И╪▒ ╪╣┘Д┘Й ╪е╪л╪и╪з╪к╪з╪к ┘Д┘Д╪и┘К╪╣',
    noResultsDesc: '╪к╪н┘В┘В ┘Е╪▒╪й ╪г╪о╪▒┘Й ┘Д╪з╪н┘В┘Л╪з ╪г┘И ╪з╪╢╪и╪╖ ┘Е╪▒╪┤╪н╪з╪к ╪з┘Д╪и╪н╪л.',
    proofsForSale: '╪е╪л╪и╪з╪к╪з╪к ┘Д┘Д╪и┘К╪╣',
    available: '┘Е╪к╪з╪н',
    minPrice: '╪г╪п┘Ж┘Й ╪│╪╣╪▒ (Cerebrum)',
    maxPrice: '╪г╪╣┘Д┘Й ╪│╪╣╪▒ (Cerebrum)',
    avgPrice: '┘Е╪к┘И╪│╪╖ ╪з┘Д╪│╪╣╪▒ (Cerebrum)',
    ideas: '╪г┘Б┘Г╪з╪▒',
    inventions: '╪з╪о╪к╪▒╪з╪╣╪з╪к',
    brands: '╪╣┘Д╪з┘Е╪з╪к ╪к╪м╪з╪▒┘К╪й',
    designs: '╪к╪╡╪з┘Е┘К┘Е',
    other: '╪г╪о╪▒┘Й',
    allPrices: '┘Г┘Д ╪з┘Д╪г╪│╪╣╪з╪▒',
    under10: '╪г┘В┘Д ┘Е┘Ж 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: '╪г┘Г╪л╪▒ ┘Е┘Ж 100 Cerebrum',
    popular: '╪з┘Д╪г┘Г╪л╪▒ ╪┤┘З╪▒╪й',
    owner: '╪з┘Д┘Е╪з┘Д┘Г:',
    views: '╪з┘Д┘Е╪┤╪з┘З╪п╪з╪к:',
    connectToBuy: '╪з╪к╪╡┘Д ╪и╪з┘Д┘Е╪н┘Б╪╕╪й ┘Д┘Д╪┤╪▒╪з╪б',
    ownProof: '╪е╪л╪и╪з╪к┘Г ╪з┘Д╪о╪з╪╡',
    purchaseConfirm: '┘З┘Д ╪г┘Ж╪к ┘Е╪к╪г┘Г╪п ╪г┘Ж┘Г ╪к╪▒┘К╪п ╪┤╪▒╪з╪б "{title}" ┘Е┘В╪з╪и┘Д {price} ┘Е┘Ж ╪▒┘Е┘И╪▓ Cerebrum╪Я',
    purchaseSuccess: 'ЁЯОЙ ╪к┘Е╪к ╪╣┘Е┘Д┘К╪й ╪з┘Д╪┤╪▒╪з╪б ╪и┘Ж╪м╪з╪н! ╪к┘Е ┘Ж┘В┘Д ┘Е┘Д┘Г┘К╪й ╪з┘Д╪е╪л╪и╪з╪к ╪е┘Д┘К┘Г.',
    purchaseFailed: '┘Б╪┤┘Д╪к ╪╣┘Е┘Д┘К╪й ╪з┘Д╪┤╪▒╪з╪б. ╪з┘Д╪▒╪м╪з╪б ┘Е╪╣╪з┘И╪п╪й ╪з┘Д┘Е╪н╪з┘И┘Д╪й.',
    purchaseOwnError: '┘Д╪з ┘К┘Е┘Г┘Ж┘Г ╪┤╪▒╪з╪б ╪е╪л╪и╪з╪к┘Г ╪з┘Д╪о╪з╪╡.',
    insufficientBalance: '╪▒╪╡┘К╪п Cerebrum ╪║┘К╪▒ ┘Г╪з┘Б┘Н. ╪к╪н╪к╪з╪м ╪е┘Д┘Й {needed} Cerebrum ┘И┘Д┘Г┘Ж ┘Д╪п┘К┘Г {has} Cerebrum.',
    loading: '╪м╪з╪▒┘К ╪з┘Д╪к╪н┘Е┘К┘Д...',
    price: '╪з┘Д╪│╪╣╪▒'
  },
  ru: {
    title: '╨а╤Л╨╜╨╛╨║ ╨╕╨╜╨╜╨╛╨▓╨░╤Ж╨╕╨╣',
    subtitle: '╨Ю╤В╨║╤А╤Л╨▓╨░╨╣╤В╨╡, ╨╕╨╜╨▓╨╡╤Б╤В╨╕╤А╤Г╨╣╤В╨╡ ╨╕ ╤В╨╛╤А╨│╤Г╨╣╤В╨╡ ╤Г╨╜╨╕╨║╨░╨╗╤М╨╜╤Л╨╝╨╕ ╨╛╨▒╤К╨╡╨║╤В╨░╨╝╨╕ ╨╕╨╜╤В╨╡╨╗╨╗╨╡╨║╤В╤Г╨░╨╗╤М╨╜╨╛╨╣ ╤Б╨╛╨▒╤Б╤В╨▓╨╡╨╜╨╜╨╛╤Б╤В╨╕.',
    searchPlaceholder: '╨Я╨╛╨╕╤Б╨║ ╨┤╨╛╨║╨░╨╖╨░╤В╨╡╨╗╤М╤Б╤В╨▓ ╨┐╨╛ ╨╜╨░╨╖╨▓╨░╨╜╨╕╤О...',
    sortBy: '╨б╨╛╤А╤В╨╕╤А╨╛╨▓╨░╤В╤М ╨┐╨╛:',
    newest: '╨б╨░╨╝╤Л╨╡ ╨╜╨╛╨▓╤Л╨╡',
    oldest: '╨б╨░╨╝╤Л╨╡ ╤Б╤В╨░╤А╤Л╨╡',
    priceHighLow: '╨ж╨╡╨╜╨░: ╨╛╤В ╨▓╤Л╤Б╨╛╨║╨╛╨╣ ╨║ ╨╜╨╕╨╖╨║╨╛╨╣',
    priceLowHigh: '╨ж╨╡╨╜╨░: ╨╛╤В ╨╜╨╕╨╖╨║╨╛╨╣ ╨║ ╨▓╤Л╤Б╨╛╨║╨╛╨╣',
    categoryFilter: '╨Ъ╨░╤В╨╡╨│╨╛╤А╨╕╤П:',
    allCategories: '╨Т╤Б╨╡ ╨║╨░╤В╨╡╨│╨╛╤А╨╕╨╕',
    buyNow: '╨Ъ╤Г╨┐╨╕╤В╤М ╤Б╨╡╨╣╤З╨░╤Б',
    viewDetails: '╨Я╨╛╤Б╨╝╨╛╤В╤А╨╡╤В╤М ╨┤╨╡╤В╨░╨╗╨╕',
    noResultsTitle: '╨Ф╨╛╨║╨░╨╖╨░╤В╨╡╨╗╤М╤Б╤В╨▓╨░ ╨┤╨╗╤П ╨┐╤А╨╛╨┤╨░╨╢╨╕ ╨╜╨╡ ╨╜╨░╨╣╨┤╨╡╨╜╤Л',
    noResultsDesc: '╨Ч╨░╨╣╨┤╨╕╤В╨╡ ╨┐╨╛╨╖╨╢╨╡ ╨╕╨╗╨╕ ╨╕╨╖╨╝╨╡╨╜╨╕╤В╨╡ ╤Д╨╕╨╗╤М╤В╤А╤Л ╨┐╨╛╨╕╤Б╨║╨░.',
    proofsForSale: '╨Ф╨╛╨║╨░╨╖╨░╤В╨╡╨╗╤М╤Б╤В╨▓╨░ ╨╜╨░ ╨┐╤А╨╛╨┤╨░╨╢╤Г',
    available: '╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛',
    minPrice: '╨Ь╨╕╨╜. ╤Ж╨╡╨╜╨░ (Cerebrum)',
    maxPrice: '╨Ь╨░╨║╤Б. ╤Ж╨╡╨╜╨░ (Cerebrum)',
    avgPrice: '╨б╤А╨╡╨┤. ╤Ж╨╡╨╜╨░ (Cerebrum)',
    ideas: '╨Ш╨┤╨╡╨╕',
    inventions: '╨Ш╨╖╨╛╨▒╤А╨╡╤В╨╡╨╜╨╕╤П',
    brands: '╨С╤А╨╡╨╜╨┤╤Л',
    designs: '╨Ф╨╕╨╖╨░╨╣╨╜╤Л',
    other: '╨Ф╤А╤Г╨│╨╛╨╡',
    allPrices: '╨Т╤Б╨╡ ╤Ж╨╡╨╜╤Л',
    under10: '╨Ь╨╡╨╜╨╡╨╡ 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: '╨С╨╛╨╗╨╡╨╡ 100 Cerebrum',
    popular: '╨б╨░╨╝╤Л╨╡ ╨┐╨╛╨┐╤Г╨╗╤П╤А╨╜╤Л╨╡',
    owner: '╨Т╨╗╨░╨┤╨╡╨╗╨╡╤Ж:',
    views: '╨Я╤А╨╛╤Б╨╝╨╛╤В╤А╤Л:',
    connectToBuy: '╨Я╨╛╨┤╨║╨╗╤О╤З╨╕╤В╨╡ ╨║╨╛╤И╨╡╨╗╨╡╨║ ╨┤╨╗╤П ╨┐╨╛╨║╤Г╨┐╨║╨╕',
    ownProof: '╨Т╨░╤И╨╡ ╤Б╨╛╨▒╤Б╤В╨▓╨╡╨╜╨╜╨╛╨╡ ╨┤╨╛╨║╨░╨╖╨░╤В╨╡╨╗╤М╤Б╤В╨▓╨╛',
    purchaseConfirm: '╨Т╤Л ╤Г╨▓╨╡╤А╨╡╨╜╤Л, ╤З╤В╨╛ ╤Е╨╛╤В╨╕╤В╨╡ ╨║╤Г╨┐╨╕╤В╤М "{title}" ╨╖╨░ {price} ╤В╨╛╨║╨╡╨╜╨╛╨▓ Cerebrum?',
    purchaseSuccess: 'ЁЯОЙ ╨Я╨╛╨║╤Г╨┐╨║╨░ ╨┐╤А╨╛╤И╨╗╨░ ╤Г╤Б╨┐╨╡╤И╨╜╨╛! ╨Я╤А╨░╨▓╨╛ ╤Б╨╛╨▒╤Б╤В╨▓╨╡╨╜╨╜╨╛╤Б╤В╨╕ ╨╜╨░ ╨┤╨╛╨║╨░╨╖╨░╤В╨╡╨╗╤М╤Б╤В╨▓╨╛ ╨┐╨╡╤А╨╡╨┤╨░╨╜╨╛ ╨▓╨░╨╝.',
    purchaseFailed: '╨Я╨╛╨║╤Г╨┐╨║╨░ ╨╜╨╡ ╤Г╨┤╨░╨╗╨░╤Б╤М. ╨Я╨╛╨╢╨░╨╗╤Г╨╣╤Б╤В╨░, ╨┐╨╛╨┐╤А╨╛╨▒╤Г╨╣╤В╨╡ ╨╡╤Й╨╡ ╤А╨░╨╖.',
    purchaseOwnError: '╨Т╤Л ╨╜╨╡ ╨╝╨╛╨╢╨╡╤В╨╡ ╨║╤Г╨┐╨╕╤В╤М ╤Б╨╛╨▒╤Б╤В╨▓╨╡╨╜╨╜╨╛╨╡ ╨┤╨╛╨║╨░╨╖╨░╤В╨╡╨╗╤М╤Б╤В╨▓╨╛.',
    insufficientBalance: '╨Э╨╡╨┤╨╛╤Б╤В╨░╤В╨╛╤З╨╜╨╛ ╤Б╤А╨╡╨┤╤Б╤В╨▓ Cerebrum. ╨Т╨░╨╝ ╨╜╤Г╨╢╨╜╨╛ {needed} Cerebrum, ╨╜╨╛ ╤Г ╨▓╨░╤Б ╨╡╤Б╤В╤М {has} Cerebrum.',
    loading: '╨Ч╨░╨│╤А╤Г╨╖╨║╨░...',
    price: '╨ж╨╡╨╜╨░'
  },
  ja: {
    title: 'уВдуГОуГЩуГ╝уВ╖уГзуГ│уГЮуГ╝уВ▒уГГуГИуГЧуГмуВдуВ╣',
    subtitle: 'уГжуГЛуГ╝уВпуБкчЯечЪДш▓бчФгуВТчЩ║шжЛуАБцКХш│ЗуАБхПЦх╝ХуБЧуБ╛уБЩуАВ',
    searchPlaceholder: 'уВ┐уВдуГИуГлуБзши╝цШОуВТцдЬч┤в...',
    sortBy: 'ф╕жуБ╣цЫ┐уБИ:',
    newest: 'цЬАцЦ░',
    oldest: 'цЬАхПд',
    priceHighLow: 'ф╛бца╝: щлШуБДщаЖ',
    priceLowHigh: 'ф╛бца╝: хоЙуБДщаЖ',
    categoryFilter: 'уВлуГЖуВ┤уГкуГ╝:',
    allCategories: 'уБЩуБ╣уБжуБоуВлуГЖуВ┤уГкуГ╝',
    buyNow: 'ф╗КуБЩуБРш│╝хЕе',
    viewDetails: 'шй│ч┤░уВТшжЛуВЛ',
    noResultsTitle: 'ш▓йхг▓ф╕нуБоши╝цШОуБМшжЛуБдуБЛуВКуБ╛уБЫуВУ',
    noResultsDesc: 'х╛МуБзхЖНчв║шкНуБЩуВЛуБЛуАБцдЬч┤вуГХуВгуГлуВ┐уГ╝уВТшк┐цХ┤уБЧуБжуБПуБауБХуБДуАВ',
    proofsForSale: 'ш▓йхг▓ф╕нуБоши╝цШО',
    available: 'хИйчФихПпшГ╜',
    minPrice: 'цЬАф╜Оф╛бца╝ (Cerebrum)',
    maxPrice: 'цЬАщлШф╛бца╝ (Cerebrum)',
    avgPrice: 'х╣│хЭЗф╛бца╝ (Cerebrum)',
    ideas: 'уВвуВдуГЗуВв',
    inventions: 'чЩ║цШО',
    brands: 'уГЦуГйуГ│уГЙ',
    designs: 'уГЗуВ╢уВдуГ│',
    other: 'уБЭуБоф╗Ц',
    allPrices: 'уБЩуБ╣уБжуБоф╛бца╝',
    under10: '10 CerebrumцЬкц║А',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: '100 Cerebrumф╗еф╕К',
    popular: 'ф║║ц░Ч',
    owner: 'цЙАцЬЙшАЕ:',
    views: 'щЦ▓шжзцХ░:',
    connectToBuy: 'ш│╝хЕеуБЩуВЛуБлуБпуВжуВйуГмуГГуГИуВТцОеч╢Ъ',
    ownProof: 'уБВуБкуБЯшЗкш║луБоши╝цШО',
    purchaseConfirm: 'цЬмх╜УуБл{price} CerebrumуГИуГ╝уВпуГ│уБзуАМ{title}уАНуВТш│╝хЕеуБЧуБ╛уБЩуБЛя╝Я',
    purchaseSuccess: 'ЁЯОЙ ш│╝хЕецИРхКЯя╝Бши╝цШОуБоцЙАцЬЙцийуБМуБВуБкуБЯуБлшн▓ц╕буБХуВМуБ╛уБЧуБЯуАВ',
    purchaseFailed: 'ш│╝хЕеуБлхд▒цХЧуБЧуБ╛уБЧуБЯуАВуВВуБЖф╕Ах║жуБКшйжуБЧуБПуБауБХуБДуАВ',
    purchaseOwnError: 'уБВуБкуБЯшЗкш║луБоши╝цШОуБпш│╝хЕеуБзуБНуБ╛уБЫуВУуАВ',
    insufficientBalance: 'CerebrumуБоцоЛщлШуБМф╕Нш╢│уБЧуБжуБДуБ╛уБЩуАВ{needed} CerebrumуБМх┐ЕшжБуБзуБЩуБМуАБ{has} CerebrumуБЧуБЛуБВуВКуБ╛уБЫуВУуАВ',
    loading: 'шкнуБ┐ш╛╝уБ┐ф╕н...',
    price: 'ф╛бца╝'
  },
  ko: {
    title: 'эШБьЛа ызИь╝УэФМыаИьЭ┤ьКд',
    subtitle: 'ыПЕэК╣эХЬ ьзАьаБ ьЮмьВ░ьЭД ы░Ьъ▓м, эИмьЮР ы░П ъ▒░ыЮШэХШьЛньЛЬьШд.',
    searchPlaceholder: 'ьаЬыкйьЬ╝ыбЬ ьжЭыкЕ ъ▓АьГЙ...',
    sortBy: 'ьаХыам ъ╕░ьдА:',
    newest: 'ь╡ЬьЛаьИЬ',
    oldest: 'ьШдыЮШыРЬьИЬ',
    priceHighLow: 'ъ░Аъ▓й: ыЖТьЭА ьИЬ',
    priceLowHigh: 'ъ░Аъ▓й: ыВоьЭА ьИЬ',
    categoryFilter: 'ь╣┤эЕМъ│аыжм:',
    allCategories: 'ыкиыУа ь╣┤эЕМъ│аыжм',
    buyNow: 'ьзАъ╕И ъ╡мызд',
    viewDetails: 'ьД╕ы╢А ьаХы│┤ ы│┤ъ╕░',
    noResultsTitle: 'эМРызд ьдСьЭ╕ ьжЭыкЕьЭД ь░╛ьЭД ьИШ ьЧЖьК╡ыЛИыЛд',
    noResultsDesc: 'ыВШьдСьЧР ыЛдьЛЬ эЩХьЭ╕эХШъ▒░ыВШ ъ▓АьГЙ эХДэД░ые╝ ьб░ьаХэХШьЛньЛЬьШд.',
    proofsForSale: 'эМРызд ьдСьЭ╕ ьжЭыкЕ',
    available: 'ьВмьЪй ъ░АыКе',
    minPrice: 'ь╡ЬьаАъ░А (Cerebrum)',
    maxPrice: 'ь╡Ьъ│аъ░А (Cerebrum)',
    avgPrice: 'эПЙъ╖аъ░А (Cerebrum)',
    ideas: 'ьХДьЭ┤ыФФьЦ┤',
    inventions: 'ы░ЬыкЕэТИ',
    brands: 'ы╕МыЮЬыУЬ',
    designs: 'ыФФьЮРьЭ╕',
    other: 'ъ╕░эГА',
    allPrices: 'ыкиыУа ъ░Аъ▓й',
    under10: '10 Cerebrum ып╕ызМ',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: '100 Cerebrum ьЭ┤ьГБ',
    popular: 'ьЭ╕ъ╕░ьИЬ',
    owner: 'ьЖМьЬаьЮР:',
    views: 'ьб░эЪМьИШ:',
    connectToBuy: 'ъ╡мыздэХШыадый┤ ьзАъ░С ьЧ░ъ▓░',
    ownProof: 'ьЮРьЛаьЭШ ьжЭыкЕ',
    purchaseConfirm: 'ьаХызРыбЬ {price} Cerebrum эЖаэБ░ьЬ╝ыбЬ "{title}"ьЭД(ые╝) ъ╡мыздэХШьЛЬъ▓аьК╡ыЛИъ╣М?',
    purchaseSuccess: 'ЁЯОЙ ъ╡мызд ьД▒ъ│╡! ьжЭыкЕ ьЖМьЬаъ╢МьЭ┤ ъ╖АэХШьЧРъ▓М ьЭ┤ьаДыРШьЧИьК╡ыЛИыЛд.',
    purchaseFailed: 'ъ╡мыздьЧР ьЛдэМиэЦИьК╡ыЛИыЛд. ыЛдьЛЬ ьЛЬыПДэХШьЛньЛЬьШд.',
    purchaseOwnError: 'ьЮРьЛаьЭШ ьжЭыкЕьЭА ъ╡мыздэХа ьИШ ьЧЖьК╡ыЛИыЛд.',
    insufficientBalance: 'Cerebrum ьЮФьХбьЭ┤ ы╢Аьб▒эХйыЛИыЛд. {needed} CerebrumьЭ┤ эХДьЪФэХШьзАызМ {has} CerebrumызМ ьЮИьК╡ыЛИыЛд.',
    loading: 'ыбЬыУЬ ьдС...',
    price: 'ъ░Аъ▓й'
  },
  sw: {
    title: 'Soko la Ubunifu',
    subtitle: 'Gundua, wekeza, na fanya biashara ya mali miliki za kipekee.',
    searchPlaceholder: 'Tafuta ithibati kwa jina...',
    sortBy: 'Panga kwa:',
    newest: 'Mpya zaidi',
    oldest: 'Ya zamani zaidi',
    priceHighLow: 'Bei: Juu kwenda Chini',
    priceLowHigh: 'Bei: Chini kwenda Juu',
    categoryFilter: 'Kategoria:',
    allCategories: 'Kategoria Zote',
    buyNow: 'Nunua Sasa',
    viewDetails: 'Tazama Maelezo',
    noResultsTitle: 'Hakuna ithibati zinazouzwa zilizopatikana',
    noResultsDesc: 'Angalia tena baadaye au rekebisha vichujio vyako vya utafutaji.',
    proofsForSale: 'Ithibati Zinazouzwa',
    available: 'Inapatikana',
    minPrice: 'Bei ya Chini (Cerebrum)',
    maxPrice: 'Bei ya Juu (Cerebrum)',
    avgPrice: 'Bei ya Wastani (Cerebrum)',
    ideas: 'Mawazo',
    inventions: 'Uvumbuzi',
    brands: 'Chapa',
    designs: 'Miundo',
    other: 'Nyingine',
    allPrices: 'Bei Zote',
    under10: 'Chini ya 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: 'Zaidi ya 100 Cerebrum',
    popular: 'Maarufu Zaidi',
    owner: 'Mmiliki:',
    views: 'Maoni:',
    connectToBuy: 'Unganisha Pochi ili Ununue',
    ownProof: 'Uthibitisho Wako Mwenyewe',
    purchaseConfirm: 'Una uhakika unataka kununua "{title}" kwa tokeni {price} za Cerebrum?',
    purchaseSuccess: 'ЁЯОЙ Ununuzi umefaulu! Umiliki wa ithibati umehamishiwa kwako.',
    purchaseFailed: 'Ununuzi haukufaulu. Tafadhali jaribu tena.',
    purchaseOwnError: 'Huwezi kununua ithibati yako mwenyewe.',
    insufficientBalance: 'Salio la Cerebrum halitoshi. Unahitaji {needed} Cerebrum lakini una {has} Cerebrum.',
    loading: 'Inapakia...',
    price: 'Bei'
  },
  ha: {
    title: 'Kasuwar ╞Шir╞Щira',
    subtitle: 'Gano, saka hannun jari, da kasuwancin kadarorin hankali na musamman.',
    searchPlaceholder: 'Bincika tabbaci ta take...',
    sortBy: 'Shirya ta:',
    newest: 'Sabon shiga',
    oldest: 'Mafi tsufa',
    priceHighLow: 'Farashi: Daga sama zuwa kasa',
    priceLowHigh: 'Farashi: Daga kasa zuwa sama',
    categoryFilter: 'Rukuni:',
    allCategories: 'Duk Rukunnai',
    buyNow: 'Sayi Yanzu',
    viewDetails: 'Duba Cikakken Bayani',
    noResultsTitle: 'Ba a sami wani tabbaci na siyarwa ba',
    noResultsDesc: 'Duba baya an jima ko daidaita matattarar bincikenka.',
    proofsForSale: 'Tabbaci na Siyarwa',
    available: 'Akwai',
    minPrice: 'Mafi ╞Щarancin Farashi (Cerebrum)',
    maxPrice: 'Mafi girman Farashi (Cerebrum)',
    avgPrice: 'Matsakaicin Farashi (Cerebrum)',
    ideas: 'Ra\'ayoyi',
    inventions: '╞Шir╞Щire-╞Щir╞Щire',
    brands: 'Alamomi',
    designs: 'Zane-zane',
    other: 'Sauran',
    allPrices: 'Duk Farashi',
    under10: 'Kasa da 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: 'Sama da 100 Cerebrum',
    popular: 'Mafi Shahara',
    owner: 'Mai shi:',
    views: 'Kallo:',
    connectToBuy: 'Ha╔Чa Walat don Sayen',
    ownProof: 'Tabbacinka',
    purchaseConfirm: 'Ka tabbata kana son siyan "{title}" akan {price} alamun Cerebrum?',
    purchaseSuccess: 'ЁЯОЙ Sayen ya yi nasara! An mika maka mallakar tabbacin.',
    purchaseFailed: 'Sayen ya ga za. Da fatan za a sake gwadawa.',
    purchaseOwnError: 'Ba za ka iya siyan tabbacinka ba.',
    insufficientBalance: 'Rashin isasshen ma\'aunin Cerebrum. Kuna bu╞Щatar {needed} Cerebrum amma kuna da {has} Cerebrum.',
    loading: 'Ana lodawa...',
    price: 'Farashi'
  },
  yo: {
    title: 'Ibi-с╗Нja Innovation',
    subtitle: 'с╣вawari, с╣гe idoko-owo, ati с╣гowo awс╗Нn ohun-ini с╗Нgbс╗Нn alailс║╣gbс║╣.',
    searchPlaceholder: 'Wa awс╗Нn с║╣ri nipasс║╣ akс╗Нle...',
    sortBy: 'с╣вeto nipasс║╣:',
    newest: 'Titun julс╗Н',
    oldest: 'Atijс╗Н julс╗Н',
    priceHighLow: 'Iye: Giga si Kekere',
    priceLowHigh: 'Iye: Kekere si Giga',
    categoryFilter: 'с║╕ka:',
    allCategories: 'Gbogbo Awс╗Нn с║╣ka',
    buyNow: 'Ra Bayi',
    viewDetails: 'Wo Awс╗Нn alaye',
    noResultsTitle: 'Ko si awс╗Нn с║╣ri ti a rii fun tita',
    noResultsDesc: 'с╣вayс║╣wo pada nigbamii tabi с╣гatunс╣гe awс╗Нn asс║╣ wiwa rс║╣.',
    proofsForSale: 'Awс╗Нn с║╣ri fun Tita',
    available: 'Wa',
    minPrice: 'Iye to kere (Cerebrum)',
    maxPrice: 'Iye to pс╗Н julс╗Н (Cerebrum)',
    avgPrice: 'Iye apapс╗Н (Cerebrum)',
    ideas: 'Awс╗Нn imс╗Нran',
    inventions: 'Awс╗Нn с║╣da',
    brands: 'Awс╗Нn burandi',
    designs: 'Awс╗Нn apс║╣rс║╣',
    other: 'Omiiran',
    allPrices: 'Gbogbo Awс╗Нn iye',
    under10: 'Labс║╣ 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: 'Ju 100 Cerebrum',
    popular: 'Gbajumс╗Н julс╗Н',
    owner: 'Oni:',
    views: 'Awс╗Нn iwo:',
    connectToBuy: 'So Apamс╗Нwс╗Н pс╗Н lati Ra',
    ownProof: 'с║╕ri Tirс║╣',
    purchaseConfirm: 'с╣вe o da с╗Н loju pe o fс║╣ ra "{title}" fun awс╗Нn ami-ami {price} Cerebrum?',
    purchaseSuccess: 'ЁЯОЙ Rira с╣гaс╣гeyс╗Нri! A ti gbe ohun-ini с║╣ri si с╗Нdс╗Н rс║╣.',
    purchaseFailed: 'Rira kuna. Jс╗Нwс╗Н gbiyanju lс║╣с║╣kansi.',
    purchaseOwnError: 'O ko le ra с║╣ri tirс║╣.',
    insufficientBalance: 'Iwс╗Нntunwс╗Нnsi Cerebrum ko to. O nilo {needed} Cerebrum с╣гugbс╗Нn o ni {has} Cerebrum.',
    loading: 'N gbejade...',
    price: 'Iye'
  },
  tr: {
    title: '─░novasyon Pazaryeri',
    subtitle: 'Benzersiz fikri m├╝lkleri ke┼Яfedin, yat─▒r─▒m yap─▒n ve ticaretini yap─▒n.',
    searchPlaceholder: 'Ba┼Яl─▒─Яa g├╢re kan─▒t aray─▒n...',
    sortBy: 'S─▒rala:',
    newest: 'En Yeni',
    oldest: 'En Eski',
    priceHighLow: 'Fiyat: Y├╝ksekten D├╝┼Я├╝─Яe',
    priceLowHigh: 'Fiyat: D├╝┼Я├╝kten Y├╝kse─Яe',
    categoryFilter: 'Kategori:',
    allCategories: 'T├╝m Kategoriler',
    buyNow: '┼Юimdi Sat─▒n Al',
    viewDetails: 'Detaylar─▒ G├╢r├╝nt├╝le',
    noResultsTitle: 'Sat─▒l─▒k kan─▒t bulunamad─▒',
    noResultsDesc: 'Daha sonra tekrar kontrol edin veya arama filtrelerinizi ayarlay─▒n.',
    proofsForSale: 'Sat─▒l─▒k Kan─▒tlar',
    available: 'Mevcut',
    minPrice: 'Min Fiyat (Cerebrum)',
    maxPrice: 'Maks Fiyat (Cerebrum)',
    avgPrice: 'Ort Fiyat (Cerebrum)',
    ideas: 'Fikirler',
    inventions: 'Bulu┼Яlar',
    brands: 'Markalar',
    designs: 'Tasar─▒mlar',
    other: 'Di─Яer',
    allPrices: 'T├╝m Fiyatlar',
    under10: '10 Cerebrum Alt─▒',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: '100 Cerebrum ├Ьzeri',
    popular: 'En Pop├╝ler',
    owner: 'Sahip:',
    views: 'G├╢r├╝nt├╝leme:',
    connectToBuy: 'Sat─▒n Almak i├зin C├╝zdan─▒ Ba─Яlay─▒n',
    ownProof: 'Kendi Kan─▒t─▒n─▒z',
    purchaseConfirm: '"{title}" adl─▒ kan─▒t─▒ {price} Cerebrum jetonu kar┼Я─▒l─▒─Я─▒nda sat─▒n almak istedi─Яinizden emin misiniz?',
    purchaseSuccess: 'ЁЯОЙ Sat─▒n alma ba┼Яar─▒l─▒! Kan─▒t─▒n m├╝lkiyeti size devredildi.',
    purchaseFailed: 'Sat─▒n alma ba┼Яar─▒s─▒z oldu. L├╝tfen tekrar deneyin.',
    purchaseOwnError: 'Kendi kan─▒t─▒n─▒z─▒ sat─▒n alamazs─▒n─▒z.',
    insufficientBalance: 'Yetersiz Cerebrum bakiyesi. {needed} Cerebrum\'a ihtiyac─▒n─▒z var ama {has} Cerebrum\'unuz var.',
    loading: 'Y├╝kleniyor...',
    price: 'Fiyat'
  },
  ku: {
    title: 'S├╗ka N├╗jeniy├к',
    subtitle: 'Taybetmendiy├кn rew┼Яenb├оr├о y├кn b├кhempa kif┼Я bikin, veberh├кnan├к bikin ├╗ bazirganiy├к bikin.',
    searchPlaceholder: 'Li gor├о sernav├к li del├оlan bigerin...',
    sortBy: 'R├кz bike li gor├о:',
    newest: 'N├╗tir├оn',
    oldest: 'Kevntir├оn',
    priceHighLow: 'Biha: Ji Bilind ber bi Nizim',
    priceLowHigh: 'Biha: Ji Nizim ber bi Bilind',
    categoryFilter: 'Kategor├о:',
    allCategories: 'Hem├╗ Kategor├о',
    buyNow: 'Niha Bikire',
    viewDetails: 'Detayan Bib├оne',
    noResultsTitle: 'Tu del├оl ji bo firotin├к nehatin d├оtin',
    noResultsDesc: 'Pa┼Я├к d├оsa kontrol bikin an j├о parz├╗n├кn l├кger├оna xwe sererast bikin.',
    proofsForSale: 'Del├оl├кn ji bo Firotin├к',
    available: 'Berdest',
    minPrice: 'Bihay├к K├кm (Cerebrum)',
    maxPrice: 'Bihay├к Z├кde (Cerebrum)',
    avgPrice: 'Bihay├к Nav├оn (Cerebrum)',
    ideas: 'Fikir',
    inventions: 'Dah├кnan',
    brands: 'Marke',
    designs: 'S├кwiran',
    other: 'Y├кn din',
    allPrices: 'Hem├╗ Biha',
    under10: 'Di bin 10 Cerebrum',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: 'Li ser 100 Cerebrum',
    popular: 'Her├о Populer',
    owner: 'Xwed├о:',
    views: 'D├оtin:',
    connectToBuy: 'Ji bo Kir├оn├к Ber├оk├к Gir├кde',
    ownProof: 'Del├оla We',
    purchaseConfirm: 'Ma h├╗n bawer in ku h├╗n dixwazin "{title}" bi {price} n├о┼Яanek├кn Cerebrum bikirin?',
    purchaseSuccess: 'ЁЯОЙ Kir├оn serket├о b├╗! Xwed├оtiya del├оl├к ji we re hate veguhestin.',
    purchaseFailed: 'Kir├оn bi ser neket. Ji kerema xwe d├оsa bicerib├оnin.',
    purchaseOwnError: 'H├╗n nikarin del├оla xwe bikirin.',
    insufficientBalance: 'B├кyeteriya balansa Cerebrum. P├кdiviya we bi {needed} Cerebrum heye l├к {has} Cerebrum we hene.',
    loading: 'T├к Barkirin...',
    price: 'Biha'
  },
  ps: {
    title: '╪п ┘Ж┘И┌Ъ╪к ╪и╪з╪▓╪з╪▒',
    subtitle: '╪и█Р ╪│╪з╪▒┘К ┘Б┌й╪▒┘К ┘Е┘Д┌й█М╪к┘И┘Ж┘З ┌й╪┤┘Б╪М ┘╛╪з┘Ж┌л┘И┘Ж┘З ╪з┘И ╪к╪м╪з╪▒╪к ┘И┌й┌У╪ж.',
    searchPlaceholder: '╪п ╪│╪▒┘Д█М┌й ┘Д┘З ┘Е╪о█Р ╪л╪и┘И╪к┘И┘Ж┘З ┘И┘╛┘Д┘╝╪ж...',
    sortBy: '╪к╪▒╪к█М╪и ┌й┌У╪ж ╪п:',
    newest: '┘Ж┘И█М',
    oldest: '╪▓┘И┌У',
    priceHighLow: '╪и█М┘З: ┘Д┘З ┘Д┘И┌У ┌Е╪о┘З ┘╝█М┘╝ ╪к┘З',
    priceLowHigh: '╪и█М┘З: ┘Д┘З ┘╝█М┘╝ ┌Е╪о┘З ┘Д┘И┌У ╪к┘З',
    categoryFilter: '┌й┘╝┌л┘И╪▒┘К:',
    allCategories: '┘╝┘И┘Д█Р ┌й┘╝┌л┘И╪▒█Н',
    buyNow: '┘З┘Е╪п╪з ╪з┘И╪│ ┘И┘╛█М╪▒╪ж',
    viewDetails: '╪м╪▓╪ж█М╪з╪к ┘И┌л┘И╪▒╪ж',
    noResultsTitle: '╪п ┘╛┘Д┘И╪▒ ┘Д┘╛╪з╪▒┘З ┘З█М┌Е ╪л╪и┘И╪к ┘И┘Ж┘З ┘Е┘И┘Ж╪п┘Д ╪┤┘И',
    noResultsDesc: '┘И╪▒┘И╪│╪к┘З ╪и█М╪з ┘И┌л┘И╪▒╪ж █М╪з ╪о┘╛┘Д ╪п ┘Д┘╝┘И┘Ж ┘Б┘Д┘╝╪▒┘И┘Ж┘З ╪к┘Ж╪╕█М┘Е ┌й┌У╪ж.',
    proofsForSale: '╪п ┘╛┘Д┘И╪▒ ┘Д┘╛╪з╪▒┘З ╪л╪и┘И╪к┘И┘Ж┘З',
    available: '╪┤╪к┘И┘Ж ┘Д╪▒┘К',
    minPrice: '┘Д┌Ц ╪к╪▒ ┘Д┌Ц┘З ╪и█М┘З (Cerebrum)',
    maxPrice: '┌Й█М╪▒┘З ╪и█М┘З (Cerebrum)',
    avgPrice: '╪з┘И╪│╪╖ ╪и█М┘З (Cerebrum)',
    ideas: '┘Ж╪╕╪▒┘И┘Ж┘З',
    inventions: '╪з╪о╪к╪▒╪з╪╣╪з╪к',
    brands: '╪и╪▒╪з┘Ж┌Й┘И┘Ж┘З',
    designs: '┌Й█М╪▓╪з█М┘Ж┘И┘Ж┘З',
    other: '┘Ж┘И╪▒',
    allPrices: '┘╝┘И┘Д█Р ╪и█М█Р',
    under10: '┘Д┘З 10 Cerebrum ┌Е╪о┘З ┌й┘Е',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: '┘Д┘З 100 Cerebrum ┌Е╪о┘З ┌Й█М╪▒',
    popular: '┌Й█М╪▒ ┘Е╪┤┘З┘И╪▒',
    owner: '┘Е╪з┘Д┌й:',
    views: '┘Д█М╪п┘И┘Ж┘З:',
    connectToBuy: '╪п ┘╛█М╪▒┘Д┘И ┘Д┘╛╪з╪▒┘З ┘И╪з┘Д┘╝ ┘И╪╡┘Д ┌й┌У╪ж',
    ownProof: '╪│╪к╪з╪│┘И ╪о┘╛┘Д ╪л╪и┘И╪к',
    purchaseConfirm: '╪з█М╪з ╪к╪з╪│┘И ┌Й╪з┌Й┘З █М╪з╪│╪к ┌Ж█Р "{title}" ╪п {price} Cerebrum ╪к┘И┌й┘И┘Ж┘И ┘Д┘╛╪з╪▒┘З ╪з╪о┘Д╪ж╪Я',
    purchaseSuccess: 'ЁЯОЙ ┘╛█М╪▒┘И╪п ╪и╪▒█М╪з┘Д█М ╪┤┘И! ╪п ╪л╪и┘И╪к ┘Е┘Д┌й█М╪к ╪к╪з╪│┘И ╪к┘З ╪з┘Ж╪к┘В╪з┘Д ╪┤┘И.',
    purchaseFailed: '┘╛█М╪▒┘И╪п ┘Ж╪з┌й╪з┘Е ╪┤┘И. ┘Е┘З╪▒╪и╪з┘Ж┘К ┘И┌й┌У╪ж ╪и█М╪з ┘З┌Е┘З ┘И┌й┌У╪ж.',
    purchaseOwnError: '╪к╪з╪│┘И ┘Ж╪┤╪ж ┌й┘И┘Д█М ╪о┘╛┘Д ╪л╪и┘И╪к ┘И┘╛█М╪▒╪ж.',
    insufficientBalance: '╪п Cerebrum ╪и█М┘Д╪з┘Ж╪│ ┘Ж╪з┌й╪з┘Б┘К ╪п█М. ╪к╪з╪│┘И {needed} Cerebrum ╪к┘З ╪з┌У╪к█М╪з ┘Д╪▒╪ж ┘Е┌л╪▒ ╪к╪з╪│┘И {has} Cerebrum ┘Д╪▒╪ж.',
    loading: '┘Д┘И┌Й ┌й█М┌Ц┘К...',
    price: '╪и█М┘З'
  },
  bal: {
    title: '╪з┘Ж┘╣┘Д█М┌й┌Ж┘И╪ж┘Д ┘╛╪▒╪з┘╛╪▒┘╣█М ┘Е╪з╪▒┌й█М┘╣ ┘╛┘Д█М╪│',
    subtitle: 'AI ╪б┘Р ╪░╪▒█М╪╣█Б ╪к╪╡╪п█М┘В ╪и┘И╪к┌п█М┌║ ╪з┘Ж┘╣┘Д█М┌й┌Ж┘И╪ж┘Д ┘╛╪▒╪з┘╛╪▒┘╣█М ╪н┘В┘И┘В ╪б┘О ╪п╪▒█М╪з┘Б╪к╪М ╪н╪з╪╡┘Д ╪б┘П ╪к╪м╪з╪▒╪к ┌й┘Ж ╪з╪к.',
    searchPlaceholder: '╪╣┘Ж┘И╪з┘Ж╪М ╪п╪│╪к┘ЗтАМ╪и┘Ж╪п█М╪М █М╪з █Б█М╪┤ ╪б┘Р ╪░╪▒█М╪╣█Б ╪┤┘И█Б╪з╪▓ ┌й┘Ж...',
    sortBy: '╪к╪▒╪к█М╪и ╪п█М┌п ╪б┘Р ╪з╪│╪з╪│',
    newest: '┘Ж┘И┌й╪к╪▒█М┘Ж',
    oldest: '┘╛█М╪┤█М╪к╪▒█М┘Ж',
    priceHighLow: '┘В█М┘Е╪к: ┌п█М╪┤╪к╪▒ ╪б┘О ┌Ж█Б ┌й┘Е ╪б┘О',
    priceLowHigh: '┘В█М┘Е╪к: ┌й┘Е ╪б┘О ┌Ж█Б ┌п█М╪┤╪к╪▒ ╪б┘О',
    categoryFilter: '╪п╪│╪к┘ЗтАМ╪и┘Ж╪п█М',
    allCategories: '┌й┘Д ╪п╪│╪к┘ЗтАМ╪и┘Ж╪п█М',
    buyNow: '┘З┘И┘Ж╪ж█М ╪б┘О ╪и┌п█М┘Д',
    viewDetails: '╪к╪╡█М┘Д╪з╪к ╪б┘Р ╪п█М╪│╪к┘Ж',
    noResultsTitle: '┘З┌Ж ┌п┘И╪з┘З█М ╪п╪▒ ┘Ж█Б ┌й┘╛╪к',
    noResultsDesc: '┘И╪к█М ╪┤┘И█Б╪з╪▓ █М╪з ┘Б┘Д┘╣╪▒ ╪б┘Р ┘Е╪╣█М╪з╪▒ ╪б┘О ╪и╪п┘Д ┌й┘Ж┌п ╪б┘Р ┌й┘И╪┤╪┤ ┌й┘Ж ╪з╪к ╪к╪з┌║ ┘Ж╪к█М╪м█Б ╪п╪▒ ╪и┌й┘Ж ╪з╪к.',
    proofsForSale: '┘Б╪▒┘И╪о╪к ╪б┘О ┌п┘И╪з┘З█М',
    available: '╪п╪│╪к█М╪з╪и',
    minPrice: '┌й┘Е█М┘Ж ┘В█М┘Е╪к (Cerebrum)',
    maxPrice: '┌п█М╪┤█М┘Ж ┘В█М┘Е╪к (Cerebrum)',
    avgPrice: '┘Е█М╪з┘Ж█М ┘В█М┘Е╪к (Cerebrum)',
    ideas: '┘Б┌й╪▒', // Assuming plural for ideas based on other translations, Balochi outline only had singular '╪з█М╪м╪з╪п' for 'invention'
    inventions: '╪з█М╪м╪з╪п╪з╪к', // Assuming plural for inventions
    brands: '╪и╪▒╪з┘Ж┌И╪▓', // Assuming plural for brands
    designs: '╪п█М╪▓╪з█М┘Ж', // Assuming plural for designs
    other: '╪п┌п█Б',
    allPrices: '┌й┘Д ┘В█М┘Е╪к',
    under10: '10 Cerebrum ┌Ж█Б ┌й┘Е',
    price10to50: '10-50 Cerebrum',
    price50to100: '50-100 Cerebrum',
    over100: '100 Cerebrum ┌Ж█Б ┌п█М╪┤',
    popular: '┘Е╪┤┘З┘И╪▒╪к╪▒█М┘Ж',
    owner: '┘И╪з╪м█Б:',
    views: '╪п█М┘Е ┘╛█Б ╪п█М┘Е:',
    connectToBuy: '┘╛█Б ┌п█М┘Д┌п ╪б┘О╪М ┘И╪з┘Д█М┘╣ ╪б┘О ┌п┘Ж┌И┌п',
    ownProof: '┘И╪к█М ┌п┘И╪з┘З█М',
    purchaseConfirm: '╪в█М╪з ╪┤┘Е╪з ╪и╪з┘И╪▒ ╪п╪з╪▒█М╪п ┌й┘З "{{title}}" ╪и┘З ┘В█М┘Е╪к {price} Cerebrum ╪к┘И┌й┘Ж ╪б┘О ┌п█М┘Д┌п ┘И╪з╪▒╪к╪Я',
    purchaseSuccess: 'ЁЯОЙ ┌п█М┘Д┌п ╪б┘О ╪│┘И╪и┘Е┘Ж╪п! ┌п┘И╪з┘З█М ╪б┘Р ┘Е╪з┘Д┌й█М╪к ╪┤┘Е╪ж█М ╪б┘О ┘Е┘Ж╪к┘В┘Д ╪и┘И╪к┌п.',
    purchaseFailed: '┌п█М┘Д┌п ╪б┘О ╪│┘И╪и┘Е┘Ж╪п ┘Ж█Б ╪и┘И╪к. ┘Д╪╖┘Б╪з┘Л █М┌й ╪и╪з╪▒ ╪п┌п█Б ┌й┘И╪┤╪│╪к ┌й┘Ж ╪з╪к.',
    purchaseOwnError: '╪┤┘Е╪з ┘И╪к█М ┌п┘И╪з┘З█М ╪б┘О ┌п█М┘Д┌п ┌й╪▒╪к ┘Ж█Б ┌й┘Ж ╪з╪к.',
    insufficientBalance: 'Cerebrum ╪б┘Р ╪и█М┘Д╪з┘Ж╪│ ╪и╪│ ┘Ж█Б ╪з┘Ж╪к. ╪┤┘Е╪ж█М ╪б┘О {needed} Cerebrum ┘Д┘И┘╣█М╪к ╪и┘Д█Т {has} Cerebrum ╪з┘Р╪┤ ╪з╪│╪к.',
    loading: '╪и╪з╪▓╪з╪▒ ┘Д┘И┌И ┌й┘Ж┌п ╪б┘О ╪з┘Р┘Ж╪к...',
    invention: '╪з█М╪м╪з╪п',
    brand: '╪и╪▒╪з┘Ж┌И',
    idea: '╪в╪ж█М┌И█М╪з',
    design: '╪п█М╪▓╪з█М┘Ж',
    price: '┘В█М┘Е╪к'
  }
};

export default function Marketplace() {
  const [proofs, setProofs] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isPurchasing, setIsPurchasing] = useState(null); 
  const [language, setLanguage] = useState(localStorage.getItem('lang') || 'en');
  const isConnected = false; 
  const address = null; 

  const [filters, setFilters] = useState({
    query: '',
    sortBy: 'newest',
    category: 'all',
    priceRange: 'allPrices',
  });

  const [stats, setStats] = useState({
    available: 0,
    minPrice: 0,
    maxPrice: 0,
    avgPrice: 0,
  });

  const loadProofs = useCallback(async () => {
    setIsLoading(true);
    try {
      const data = await base44.entities.Proof.filter({ is_for_sale: true, is_public: true }, "-created_date");
      setProofs(data || []);
    } catch (error) {
      console.error("Error loading proofs for sale:", error);
      setProofs([]);
    }
    setIsLoading(false);
  }, []);

  useEffect(() => {
    loadProofs();
    
    const handleLanguageChange = () => {
      setLanguage(localStorage.getItem('lang') || 'en');
    };
    window.addEventListener('languageChange', handleLanguageChange);
    return () => {
      window.removeEventListener('languageChange', handleLanguageChange);
    };
  }, [loadProofs]);

  const filteredProofs = useMemo(() => {
    let filtered = proofs.filter(p => p && p.is_for_sale);

    if (filters.query) {
      filtered = filtered.filter(p => p.title.toLowerCase().includes(filters.query.toLowerCase()));
    }
    
    if (filters.category !== 'all') {
      filtered = filtered.filter(p => p.category === filters.category);
    }

    if (filters.priceRange !== 'allPrices') {
        const [min, max] = {
            'under10': [0, 9.99],
            'price10to50': [10, 50],
            'price50to100': [50, 100],
            'over100': [100.01, Infinity]
        }[filters.priceRange];
        filtered = filtered.filter(p => p.sale_price >= min && p.sale_price <= max);
    }
    
    switch(filters.sortBy) {
        case 'oldest':
            filtered.sort((a,b) => new Date(a.created_date) - new Date(b.created_date));
            break;
        case 'priceHighLow':
            filtered.sort((a,b) => (b.sale_price || 0) - (a.sale_price || 0));
            break;
        case 'priceLowHigh':
            filtered.sort((a,b) => (a.sale_price || 0) - (b.sale_price || 0));
            break;
        case 'newest':
        default:
            filtered.sort((a,b) => new Date(b.created_date) - new Date(a.created_date));
            break;
    }
    return filtered;
  }, [proofs, filters]);

  useEffect(() => {
    if (filteredProofs.length > 0) {
      const prices = filteredProofs.map(p => p.sale_price).filter(p => p > 0);
      if (prices.length > 0) {
        setStats({
          available: filteredProofs.length,
          minPrice: Math.min(...prices),
          maxPrice: Math.max(...prices),
          avgPrice: prices.reduce((a, b) => a + b, 0) / prices.length,
        });
      } else {
        setStats({ available: filteredProofs.length, minPrice: 0, maxPrice: 0, avgPrice: 0 });
      }
    } else {
      setStats({ available: 0, minPrice: 0, maxPrice: 0, avgPrice: 0 });
    }
  }, [filteredProofs]);

  const handlePurchase = async (proofToBuy) => {
    if (!isConnected || !address) {
      alert(t.connectToBuy);
      return;
    }
    if (proofToBuy.owner_wallet_address.toLowerCase() === address.toLowerCase()) {
      alert(t.purchaseOwnError);
      return;
    }

    if (!window.confirm(t.purchaseConfirm.replace('{title}', proofToBuy.title).replace('{price}', proofToBuy.sale_price))) {
      return;
    }

    setIsPurchasing(proofToBuy.id);
    try {
      const { data: purchaseResult } = await base44.functions.invoke('purchaseProof', {
        proofId: proofToBuy.id,
        buyerAddress: address
      });

      if (purchaseResult.success) {
        alert(t.purchaseSuccess);
        loadProofs(); // Refresh the marketplace
      } else {
        throw new Error(purchaseResult.error || t.purchaseFailed);
      }
    } catch (error) {
      console.error('Purchase failed:', error);
      alert(error.message);
    } finally {
      setIsPurchasing(null);
    }
  };

  const t = translations[language] || translations.en;
  const isRTL = ['fa', 'ar', 'ur', 'ps', 'bal'].includes(language);

  const StatCard = ({ icon, label, value, formatAsCurrency = true }) => (
    <div className="glow-card p-4 rounded-lg flex items-center gap-4">
      {icon}
      <div>
        <p className="text-sm text-gray-400">{label}</p>
        <p className="text-lg font-bold text-white">
          {formatAsCurrency ? `${Number(value).toFixed(2)}` : value}
          {formatAsCurrency && <span className="text-xs text-gray-400"> CBR</span>}
        </p>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen p-4 md:p-8" dir={isRTL ? 'rtl' : 'ltr'}>
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="max-w-7xl mx-auto"
      >
        <div className="text-center mb-12">
          <h1 className="text-4xl md:text-5xl font-bold bg-gradient-to-r from-blue-400 to-cyan-300 bg-clip-text text-transparent mb-4">
            {t.title}
          </h1>
          <p className="text-lg text-gray-400">{t.subtitle}</p>
        </div>

        {/* Stats Section */}
        <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
            <StatCard icon={<ShoppingBag className="w-8 h-8 text-blue-400"/>} label={t.available} value={stats.available} formatAsCurrency={false} />
            <StatCard icon={<Coins className="w-8 h-8 text-yellow-400"/>} label={t.minPrice} value={stats.minPrice} />
            <StatCard icon={<TrendingUp className="w-8 h-8 text-green-400"/>} label={t.maxPrice} value={stats.maxPrice} />
            <StatCard icon={<DollarSign className="w-8 h-8 text-cyan-400"/>} label={t.avgPrice} value={stats.avgPrice} />
        </div>


        {/* Filters Section */}
        <div className="bg-gray-800/20 backdrop-blur-sm p-4 rounded-xl mb-8 flex flex-col md:flex-row gap-4 items-center">
            <div className="relative w-full md:flex-1">
                <Search className="absolute top-1/2 -translate-y-1/2 left-3 w-5 h-5 text-gray-400" />
                <Input
                    type="text"
                    placeholder={t.searchPlaceholder}
                    value={filters.query}
                    onChange={(e) => setFilters(prev => ({...prev, query: e.target.value}))}
                    className="bg-gray-900/50 border-gray-700 pl-10 w-full"
                />
            </div>

            <div className="flex gap-4 w-full md:w-auto">
                <Select value={filters.sortBy} onValueChange={(value) => setFilters(prev => ({...prev, sortBy: value}))}>
                    <SelectTrigger className="w-full md:w-[180px] bg-gray-900/50 border-gray-700">
                        <SelectValue placeholder={t.sortBy} />
                    </SelectTrigger>
                    <SelectContent>
                        <SelectItem value="newest">{t.newest}</SelectItem>
                        <SelectItem value="oldest">{t.oldest}</SelectItem>
                        <SelectItem value="priceHighLow">{t.priceHighLow}</SelectItem>
                        <SelectItem value="priceLowHigh">{t.priceLowHigh}</SelectItem>
                    </SelectContent>
                </Select>

                <Select value={filters.category} onValueChange={(value) => setFilters(prev => ({...prev, category: value}))}>
                    <SelectTrigger className="w-full md:w-[180px] bg-gray-900/50 border-gray-700">
                        <SelectValue placeholder={t.categoryFilter} />
                    </SelectTrigger>
                    <SelectContent>
                        <SelectItem value="all">{t.allCategories}</SelectItem>
                        <SelectItem value="invention">{t.invention}</SelectItem>
                        <SelectItem value="idea">{t.idea}</SelectItem>
                        <SelectItem value="brand">{t.brand}</SelectItem>
                        <SelectItem value="design">{t.design}</SelectItem>
                        <SelectItem value="other">{t.other}</SelectItem>
                    </SelectContent>
                </Select>

                 <Select value={filters.priceRange} onValueChange={(value) => setFilters(prev => ({...prev, priceRange: value}))}>
                    <SelectTrigger className="w-full md:w-[180px] bg-gray-900/50 border-gray-700">
                        <SelectValue placeholder="Price Range" />
                    </SelectTrigger>
                    <SelectContent>
                        <SelectItem value="allPrices">{t.allPrices}</SelectItem>
                        <SelectItem value="under10">{t.under10}</SelectItem>
                        <SelectItem value="price10to50">{t.price10to50}</SelectItem>
                        <SelectItem value="price50to100">{t.price50to100}</SelectItem>
                        <SelectItem value="over100">{t.over100}</SelectItem>
                    </SelectContent>
                </Select>
            </div>
        </div>

        {/* Proofs Grid */}
        <AnimatePresence>
          {isLoading ? (
            <div className="flex justify-center items-center h-64">
              <Loader2 className="w-8 h-8 text-blue-400 animate-spin" />
            </div>
          ) : filteredProofs.length > 0 ? (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"
            >
              {filteredProofs.map(proof => {
                const isOwner = isConnected && address && proof.owner_wallet_address.toLowerCase() === address.toLowerCase();
                return (
                  <motion.div
                    key={proof.id}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: -20 }}
                    transition={{ duration: 0.3 }}
                    className="glow-card rounded-2xl overflow-hidden flex flex-col justify-between"
                  >
                    <div className="p-5">
                      <div className="flex justify-between items-start">
                          <h3 className="text-lg font-bold text-white mb-2 pr-2">{proof.title}</h3>
                          <Badge variant="secondary" className="capitalize shrink-0">{t[proof.category] || proof.category}</Badge>
                      </div>
                      <p className="text-sm text-gray-400 mb-4 line-clamp-2">{proof.description || 'No description available.'}</p>
                      <div className="flex items-center text-sm text-gray-500 mb-4">
                          <UserIcon className="w-4 h-4 mr-2" />
                          <span className="truncate">{proof.owner_wallet_address}</span>
                      </div>
                    </div>
                    
                    <div className="p-5 border-t border-gray-700/50 mt-auto">
                      <div className="flex justify-between items-center mb-4">
                          <p className="text-gray-400 text-sm">{t.price}</p>
                          <p className="text-xl font-bold text-cyan-300 flex items-center gap-2">
                              <Coins className="w-5 h-5"/>
                              {proof.sale_price}
                          </p>
                      </div>
                      <div className="flex flex-col sm:flex-row gap-2">
                          <Button 
                            className="flex-1" 
                            onClick={() => handlePurchase(proof)}
                            disabled={!isConnected || isOwner || isPurchasing === proof.id}
                          >
                            {isPurchasing === proof.id ? <Loader2 className="w-4 h-4 mr-2 animate-spin"/> : <ShoppingCart className="w-4 h-4 mr-2"/>}
                            {isOwner ? t.ownProof : t.buyNow}
                          </Button>
                         <Link to={createPageUrl(`PublicProof?id=${proof.id}`)} className="flex-1">
                              <Button variant="outline" className="w-full" disabled={isPurchasing === proof.id}>
                                  {t.viewDetails}
                                  <ExternalLink className="w-4 h-4 ml-2"/>
                              </Button>
                          </Link>
                      </div>
                    </div>
                  </motion.div>
                );
              })}
            </motion.div>
          ) : (
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              className="text-center py-20"
            >
              <ShoppingCart className="w-16 h-16 text-gray-600 mx-auto mb-4"/>
              <h3 className="text-2xl font-semibold text-white mb-2">{t.noResultsTitle}</h3>
              <p className="text-gray-400">{t.noResultsDesc}</p>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>
    </div>
  );
}
